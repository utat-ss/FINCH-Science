"""
photon_noise.py 

Takes estimated values from running Signal-to-Noise Ratio analysis code using BrokeTran.
See http://spacesys.utat.ca/confluence/display/FIN/Signal-to-Noise+Ratio+Analysis
as well as https://github.com/spacesys-finch/Optics.

Author: Adyn Miles, Shiqi Xu, Rosie Liang
"""

import scipy.interpolate as interp
import numpy as np

def photon_noise(spectral_lower, spectral_upper, wave_meas, fwhm):
    """
    Takes estimated values from running Signal-to-Noise Ratio analysis code using BrokeTran, at
    spectral resolutions between 1.0 and 4.0nm in increments of 0.5nm. Note that this is only
    implemented for a 1590-1680nm spectral range at the moment.

    Args:
        spectral_lower: lower bound of the spectral range.
        spectral_upper: upper bound of the spectral range.
        wave_meas: spectral grid with a sampling distance of one half of the spectral resolution.
        self.cfg.fwhm: spectral resolution

    Returns:
        self.photon_noise: photon noise at every point of the spectral grid, in units of electrons.
    """
    photon_noise = []
    photon_noise_1 = [2122.79721329, 2004.33400063, 1987.70830837, 2005.61459961, 2104.52974022,
                        2169.68919519, 2077.54189879, 2009.68193945, 1993.55339974, 1970.51674574,
                        1948.72818485, 2062.12119892, 2123.06232635, 2151.41113771, 2160.75668367,
                        2163.18156013, 2165.78236683, 2164.33630361, 2165.24647729, 2159.83351458,
                        2155.51017824, 2146.98492826, 2140.45953845, 2131.491886,   2125.57676024,
                        2111.98594487, 2111.68826984, 2089.98422656, 2091.47001341, 2066.81975353,
                        2071.88996508, 2054.49514575, 2048.59539644, 2028.80273077, 2009.16934735,
                        1994.45687988, 1885.19491158, 1906.81372255, 1918.6333563,  1976.88384492,
                        1954.33503396, 1939.87224027, 1966.98780764, 1892.75560511, 1937.86695677,
                        1897.63579095, 1913.53472774, 1931.01781712, 1891.47260805, 1932.61509549,
                        1902.53094193, 1914.71285145, 1927.31265559, 1911.11824324, 1913.42898559,
                        1882.441268,   1886.30799027, 1887.48666342, 1751.07827025, 1629.73838801,
                        1806.64535421, 1844.31977536, 1848.33329451, 1840.64377522, 1818.12701184,
                        1828.15498346, 1807.73555971, 1783.16756507, 1784.13184569, 1758.01825482,
                        1779.74257726, 1772.67452117, 1681.04934295, 1726.58032237, 1760.19724814,
                        1701.67954156, 1755.95225813, 1741.2123648,  1713.18720795, 1735.7714122,
                        1700.17284149, 1642.07991903, 1686.72749615, 1708.05115053, 1678.62159939,
                        1698.32012501, 1643.73461682, 1595.85642176, 1672.92506689, 1641.01884616]

    photon_noise_15 = [2593.99182548, 2466.10803307, 2502.68660769, 2648.57332681, 2560.2920317,
                        2469.0821812,  2431.65369786, 2495.25264226, 2622.74337632, 2663.40723805,
                        2672.93167812, 2673.6960812,  2672.89633954, 2664.11018081, 2651.25170935,
                        2637.18962453, 2621.9162674,  2606.48858819, 2585.69029054, 2566.85680228,
                        2552.97329483, 2530.76755383, 2497.85833542, 2468.74029989, 2357.54909037,
                        2365.54064767, 2428.12375895, 2402.44303197, 2399.90985077, 2372.74184975,
                        2353.23295705, 2371.8977757,  2357.74277423, 2364.91082553, 2366.82456344,
                        2369.77482259, 2352.19666505, 2325.95260117, 2293.96318921, 2074.97441177,
                        2226.29106273, 2280.41363254, 2267.72612056, 2250.90374521, 2227.93095154,
                        2200.64216992, 2183.34955678, 2189.02270664, 2103.74683767, 2147.29113431,
                        2132.85896181, 2153.46602746, 2127.03689982, 2108.39153466, 2051.45457438,
                        2099.17021006, 2083.78251469, 2046.69694727, 2009.35400457, 2037.7920935]

    photon_noise_2 = [2975.97890742, 2858.97934761, 3000.1564904,  2945.29921128, 2828.81253648,
                        2859.47686684, 3023.64261107, 3077.88471676, 3084.71583945, 3081.43528996,
                        3066.71507487, 3045.58048421, 3021.92620771, 2995.83640625, 2965.7071585,
                        2939.4872773,  2904.08280177, 2843.33536086, 2720.61436668, 2769.49694292,
                        2779.58838447, 2756.941427,   2730.99030984, 2725.50049236, 2726.08947752,
                        2724.62643306, 2733.47447905, 2705.19211481, 2664.63407577, 2456.41381881,
                        2570.63784276, 2620.7306717,  2597.49503452, 2559.27145426, 2528.07682027,
                        2504.84404865, 2452.12601671, 2472.61444097, 2473.57966573, 2452.80066353,
                        2390.39172023, 2404.49775666, 2398.12483668, 2324.4636683,  2342.8646752]

    photon_noise_25 = [3340.85751814, 3257.27622438, 3361.95543289, 3205.20622399, 3228.69730055,
                        3421.16088872, 3465.30010625, 3465.44750064, 3446.51112643, 3416.5626085,
                        3381.94530164, 3341.76332289, 3303.06177329, 3247.9826309,  3129.81422759,
                        3088.87280085, 3125.61086014, 3090.02576128, 3064.21426769, 3064.31582252,
                        3066.39381775, 3064.58261376, 3019.39969435, 2834.32394499, 2877.73429699,
                        2940.40142197, 2901.12284461, 2848.86752585, 2818.05485218, 2762.4418498,
                        2776.4155306,  2764.93849031, 2695.19800573, 2704.76854264, 2651.73087043,
                        2625.75125271]
    
    photon_noise_3 = [3617.73608933, 3559.78202055, 3553.36612143, 3476.91447899, 3695.73107253,
                        3781.77257348, 3778.85793462, 3749.11907635, 3705.40217761, 3654.55779215,
                        3602.67502925, 3517.54554857, 3385.24274749, 3393.35662343, 3367.34814446,
                        3336.47521488, 3339.49668763, 3344.27358497, 3312.25761044, 3141.51812249,
                        3157.58520231, 3197.85786573, 3134.61061871, 3082.74835943, 3016.93608885,
                        3036.83665636, 2989.13907486, 2938.20598944, 2938.49093305, 2872.10088331]
    
    photon_noise_35 = [3923.2901474,  3879.15214428, 3798.25733726, 3887.89099247, 4089.63626415,
                        4098.11435375, 4062.74697159, 4006.37718362, 3942.16259374, 3866.3206892,
                        3704.71892182, 3677.03885818, 3650.80943643, 3618.59308924, 3621.66426752,
                        3615.40867902, 3473.17571461, 3399.40360057, 3462.93454219, 3389.85157338,
                        3310.85750446, 3282.37675666, 3268.50889856, 3193.47977649, 3183.08846086,
                        3108.94641858]

    photon_noise_4 = [4198.78283711, 4137.88986113, 4055.26285391, 4254.41314699, 4377.15651042,
                        4354.27969316, 4293.02100784, 4216.96109128, 4120.32491819, 3950.90319491,
                        3917.66016006, 3881.50920953, 3864.33442396, 3867.52990798, 3761.30525383,
                        3635.93358093, 3690.01923298, 3611.82118201, 3523.00582039, 3500.31308879,
                        3442.25919935, 3404.11856167, 3339.48112062]

    spec_res_series_1 = np.arange(spectral_lower, spectral_upper, 1.0)
    spec_res_series_15 = np.arange(spectral_lower, spectral_upper, 1.5)
    spec_res_series_2 = np.arange(spectral_lower, spectral_upper, 2.0)
    spec_res_series_25 = np.arange(spectral_lower, spectral_upper, 2.5)
    spec_res_series_3 = np.arange(spectral_lower, spectral_upper, 3.0)
    spec_res_series_35 = np.arange(spectral_lower, spectral_upper, 3.5)
    spec_res_series_4 = np.arange(spectral_lower, spectral_upper, 4.0)

    pn_func_1 = interp.interp1d(spec_res_series_1, photon_noise_1, 
                                fill_value="extrapolate")     # linear
    pn_1 = pn_func_1(wave_meas)             

    pn_func_15 = interp.interp1d(spec_res_series_15, photon_noise_15, 
                                fill_value="extrapolate")     # linear
    pn_15 = pn_func_15(wave_meas)

    pn_func_2 = interp.interp1d(spec_res_series_2, photon_noise_2, 
                                fill_value="extrapolate")     # linear
    pn_2 = pn_func_2(wave_meas)

    pn_func_25 = interp.interp1d(spec_res_series_25, photon_noise_25, 
                                fill_value="extrapolate")     # linear
    pn_25 = pn_func_25(wave_meas)

    pn_func_3 = interp.interp1d(spec_res_series_3, photon_noise_3, 
                                fill_value="extrapolate")     # linear
    pn_3 = pn_func_3(wave_meas)

    pn_func_35 = interp.interp1d(spec_res_series_35, photon_noise_35, 
                                fill_value="extrapolate")     # linear
    pn_35 = pn_func_35(wave_meas)

    pn_func_4 = interp.interp1d(spec_res_series_4, photon_noise_4, 
                                fill_value="extrapolate")     # linear
    pn_4 = pn_func_4(wave_meas)

    for idx in range(0, len(pn_1)):
        f = interp.interp1d([1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0], [pn_1[idx], pn_15[idx], pn_2[idx], pn_25[idx], pn_3[idx], pn_35[idx], pn_4[idx]], fill_value='extrapolate')
        value = f(fwhm)
        photon_noise.append(value)

    return photon_noise